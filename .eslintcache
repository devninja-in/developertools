[{"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/certification-decoder.tsx":"1","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/App.tsx":"2","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/header.tsx":"3","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/reportWebVitals.ts":"4","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/side-navigation.tsx":"5","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/qr-code-generator.tsx":"6","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/encoder-decoder.tsx":"7","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/index.tsx":"8","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/text-diff-viewer.tsx":"9","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/home.tsx":"10","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/json-editor.tsx":"11"},{"size":2353,"mtime":1611138038836,"results":"12","hashOfConfig":"13"},{"size":11122,"mtime":1613970279212,"results":"14","hashOfConfig":"13"},{"size":2053,"mtime":1613969788446,"results":"15","hashOfConfig":"13"},{"size":425,"mtime":1610814236291,"results":"16","hashOfConfig":"13"},{"size":5775,"mtime":1613984689814,"results":"17","hashOfConfig":"13"},{"size":2140,"mtime":1613854482565,"results":"18","hashOfConfig":"13"},{"size":5967,"mtime":1613853956657,"results":"19","hashOfConfig":"13"},{"size":603,"mtime":1610815193482,"results":"20","hashOfConfig":"13"},{"size":1891,"mtime":1613876173515,"results":"21","hashOfConfig":"13"},{"size":4090,"mtime":1613963522534,"results":"22","hashOfConfig":"13"},{"size":1495,"mtime":1613854508039,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1s1r41p",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/certification-decoder.tsx",["49"],"import React, {useState} from \"react\";\n// import the react-json-view component\nimport {Button, createStyles, makeStyles, TextField, Theme} from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n            height: 500,\n            width: '100%',\n            align: 'center',\n            alignContent: 'center'\n        },\n        paper: {\n            padding: theme.spacing(2),\n            margin: 'auto',\n            maxWidth: 500,\n        },\n        image: {\n            width: 128,\n            height: 128,\n        },\n        img: {\n            margin: 'auto',\n            display: 'block',\n            maxWidth: '100%',\n            maxHeight: '100%',\n        },\n        textbox: {\n            width: '50%',\n            align: 'center',\n            borderRightWidth: 30,\n            borderLeftWidth: 30,\n            borderColor: \"#FFFFFF\",\n        },\n        button: {\n            width: '20%',\n            align: 'center',\n            margin: '5px'\n        },\n    }),\n);\n\nexport default function CertificationDecoder() {\n\n    const [inputText, setInputText] = useState<string>('Test');\n    const [decodedText, setDecodedText] = useState<{}>({})\n    const classes = useStyles();\n\n    const clearInputText = () => {\n        setInputText('');\n    }\n\n    const decodeCertificate = (event: any) => {\n        setInputText(event.target?.value);\n        setDecodedText(JSON.parse(inputText));\n    }\n\n    return (\n        <div className={classes.root}>\n            <br/><br/>\n            <TextField\n                type=\"text\"\n                className={classes.textbox}\n                fullWidth={true}\n                rows={10}\n                variant={\"outlined\"}\n                multiline={true}\n                helperText={\"Paste certificate here\"}\n                value={inputText}\n                onChange={(event) => setInputText(event.target.value)}\n            />\n\n            <br/><br/>\n            <Button className={classes.button} variant={\"contained\"} color={\"primary\"} fullWidth={true}\n                    onClick={decodeCertificate}>Decode</Button>\n            <Button className={classes.button} variant={\"contained\"} color={\"default\"} fullWidth={true}\n                    onClick={clearInputText}>Clear</Button>\n            <br/><br/>\n\n        </div>\n\n    );\n}\n",["50","51"],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/App.tsx",[],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/header.tsx",["52"],"import React, {useState} from 'react';\nimport {useHistory} from \"react-router-dom\";\nimport ReactTooltip from \"react-tooltip\";\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport {AppBar, Button, Toolbar, Typography, IconButton} from '@material-ui/core';\nimport Menu from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n            textAlign: \"left\"\n        },\n        button: {\n            textTransform: 'none',\n        },\n    }),\n);\n\nexport default function AppHeader({openClippedDrawer, setOpenClippedDrawer}) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <Menu onClick={() => setOpenClippedDrawer(!openClippedDrawer)}/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title} onClick={() => history.push('/')}>\n                        Developer Tools\n                    </Typography>\n                    {/*<Button color=\"inherit\" onClick={() => history.push('/encode-decode')}>Encode/Decode</Button>\n                    <Button color=\"inherit\" onClick={() => history.push('/json-editor')}>Json</Button>\n                    */}\n                    <div data-tip=\"support@gsapp.in\" data-for='contact-us-tooltip' data-place='bottom'>\n                        <Button className={classes.button}  variant={\"text\"} color=\"inherit\" onClick={() => window.location.href='mailto:support@gsapp.in'}>Contact Us</Button>\n                    </div>\n                    <ReactTooltip id=\"contact-us-tooltip\" clickable/>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/reportWebVitals.ts",[],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/side-navigation.tsx",["53"],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/qr-code-generator.tsx",[],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/encoder-decoder.tsx",[],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/index.tsx",[],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/text-diff-viewer.tsx",["54"],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/home.tsx",[],"/home/abhiskum/work/code/learning/gs-app/tools/tools-ui/src/component/json-editor.tsx",["55","56"],{"ruleId":"57","severity":1,"message":"58","line":48,"column":12,"nodeType":"59","messageId":"60","endLine":48,"endColumn":23},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"57","severity":1,"message":"65","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"67","line":62,"column":55,"nodeType":"68","endLine":62,"endColumn":74,"suggestions":"69"},{"ruleId":"57","severity":1,"message":"70","line":3,"column":49,"nodeType":"59","messageId":"60","endLine":3,"endColumn":58},{"ruleId":"57","severity":1,"message":"65","line":1,"column":16,"nodeType":"59","messageId":"60","endLine":1,"endColumn":24},{"ruleId":"57","severity":1,"message":"71","line":9,"column":42,"nodeType":"59","messageId":"60","endLine":9,"endColumn":52},"@typescript-eslint/no-unused-vars","'decodedText' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleOnClick'. Either include it or remove the dependency array.","ArrayExpression",["74"],"'TextField' is defined but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [handleOnClick, selectedOperation]",{"range":"77","text":"78"},[1688,1707],"[handleOnClick, selectedOperation]"]